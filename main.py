from telebot import TeleBot
from telebot.types import * 
from sqlite3 import connect
from requests import post, get
from config import *
from kb import *
from time import time, ctime
from games import games
from re import sub, findall
from random import choice as random
from random import randint


con = connect("users.db", check_same_thread=False, isolation_level=None)
cursor = con.cursor()
bot = TeleBot(bot_token, "HTML", disable_notification=True)
headers = {'Content-Type': 'application/json', 'Crypto-Pay-API-Token': crypto_token}
emoji_list = ["‚úä", "‚úåÔ∏è", "‚úã"]


def get_data(id):
    cursor.execute("SELECT * FROM users WHERE id=?", (id,))
    udata = cursor.fetchone()
    if udata is None:
        data = (id, 0, 0, 0.0, 0.0, 0.0, None, time())
        cursor.execute("INSERT INTO users VALUES(?,?,?,?,?,?,?,?)", data)
        con.commit()
    else: data = udata
    return data


def generate_rand_str(len):
    return "".join([random("qwertyuioplkjhgfdsazxcvbnm") for _ in range(len)])


def create_cheque(id, summ):
    cheque = post("https://pay.crypt.bot/api/createCheck", json={'amount': summ, 'asset': "USDT"}, headers=headers).json()
    if "result" not in cheque:
        return False
    else:
        code = generate_rand_str(16)
        cursor.execute("INSERT INTO cheques VALUES(?,?,?)", (id, code, cheque['result']['bot_check_url']))
        con.commit()
        return code



def is_subs(id):
    try: 
        bot.get_chat_member(channel_id, id)
        return False
    except: 
        return True


@bot.message_handler(func=lambda m: is_subs(m.from_user.id))
@bot.callback_query_handler(func=lambda m: is_subs(m.from_user.id))
def unsubscribed(message):
    if type(message) is Message:
        bot.reply_to(message, "<b>–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã</b>", reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", channel_link)))
    else:
        bot.edit_message_text("<b>–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã</b>", message.message.chat.id, message.message.id, reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", channel_link)))




@bot.channel_post_handler(func=lambda m: m.chat.id == payments_id)
def bet_handle(message: Message):
    link = f'https://t.me/{message.chat.username}/{message.id}'
    try:
        user = message.entities[0].user
        if user is None: raise Exception
        if user.last_name is None:
            name = user.first_name
        else:
            name = user.first_name + " " + user.last_name
        user_info = get_data(user.id)
    except Exception as e:
        msg = bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>–û—à–∏–±–∫–∞! –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∏–≥—Ä—ã, –ª–∏–±–æ –∂–µ —É –≤–∞—Å –Ω–µ –≤–∫–ª—é—á–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ—Å—ã–ª –Ω–∞ –≤—Å–µ. –°–æ–≤–µ—Ç—É—é —ç—Ç—É —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å. üé©<blockquote>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤: t.me/maybesmall üé≤</blockquote></b>" + penis_text, reply_markup=error_kb())
        return
    rtext = message.text.replace(name, "", 1)
    bet = round(float(rtext.split('($')[1][:6].split(')')[0]), 2)
    try:
        if "üí¨" not in rtext: raise Exception
        game = rtext.split("üí¨ ")[-1].lower().replace("—ë", '–µ')
    except Exception as e:
        msg = bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>–û—à–∏–±–∫–∞! –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∏–≥—Ä—ã, –ª–∏–±–æ –∂–µ —É –≤–∞—Å –Ω–µ –≤–∫–ª—é—á–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ—Å—ã–ª –Ω–∞ –≤—Å–µ. –°–æ–≤–µ—Ç—É—é —ç—Ç—É —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å. üé©<blockquote>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤: t.me/maybesmall üé≤</blockquote></b>" + penis_text, reply_markup=error_kb())
        return
    user_stats = {"win": None, "sum": None}
    name = sub("....(dice|casino|bet|cube)", "*******", name.lower())
    new_bet_text = f'''<b>{name} <a href="{link}">—Å—Ç–∞–≤–∏—Ç</a> {bet}$

<blockquote>üí¨ {game}</blockquote></b>'''
    if game == "–ø–ª–∏–Ω–∫–æ":
        bot.send_message(channel_id, new_bet_text, disable_web_page_preview=True)
        cube_msg = bot.send_dice(channel_id, "üé≤")
        cube_value = cube_msg.dice.value
        if cube_value == 1:
            user_stats['win'] = False
            user_stats['sum'] = bet
            bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkGc7cI7bxNm_GTpQLJ0MoBiqrXksAAKg6DEb_7fhSYYST4QpYqrRAQADAgADcwADNgQ", f"<b>‚õîÔ∏è –ü–æ—Ä–∞–∂–µ–Ω–∏–µ!\n\nüîÆ –í —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–∞–≤–∫–µ —Ñ–æ—Ä—Ç—É–Ω–∞ —É–ª—ã–±–Ω–µ—Ç—Å—è —Ç–µ–±–µ\n<blockquote>–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {res}\n–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª </blockquote></b>" + penis_text, reply_markup=lose_kb())
        else:
            win_sum = round(bet * games['pl'][cube_value], 2)
            pon = create_cheque(user.id, win_sum)
            user_stats['win'] = True
            user_stats['sum'] = win_sum
            if not pon:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @{owner_username} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è {win_sum}</b>" + penis_text, reply_markup=error_kb())
            else:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBjWc7cIbaNWyMCU8sSpSsMPWmL7pEAAKf6DEb_7fhSUXjOO9zZ9iBAQADAgADcwADNgQ", f"<b>üçæ–ü–æ–±–µ–¥–∞!\n\nüòé–¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–∏\n\n<blockquote>–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {res}\n–í—ã–∏–≥—Ä—ã—à –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.\n–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª üéÉ</blockquote>\n\n‚Ä¢ –°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞—Ä—ã—à–∞—à–∞ {win_sum}$ X {win_sum * 100.5} RUB</b>" + penis_text, reply_markup=win_kb(pon))
    
    elif game == "–∫–∞–º–µ–Ω—å":
        bet_id = bot.send_message(channel_id, new_bet_text, disable_web_page_preview=True)
        emoji = random(emoji_list)
        bot.send_message(channel_id, "‚úä")
        bot.send_message(channel_id, emoji)
        if emoji == "‚úã":
            user_stats['win'] = False
            user_stats['sum'] = bet
            bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkGc7cI7bxNm_GTpQLJ0MoBiqrXksAAKg6DEb_7fhSYYST4QpYqrRAQADAgADcwADNgQ", f"<b>‚õîÔ∏è –ü–æ—Ä–∞–∂–µ–Ω–∏–µ!\n\nüîÆ –í —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–∞–≤–∫–µ —Ñ–æ—Ä—Ç—É–Ω–∞ —É–ª—ã–±–Ω–µ—Ç—Å—è —Ç–µ–±–µ\n\n<blockquote>–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª </blockquote></b>" + penis_text, reply_markup=lose_kb())
        elif emoji == "‚úåÔ∏è":
            win_sum = round(bet * 2, 2)
            pon = create_cheque(user.id, win_sum)
            user_stats['win'] = True
            user_stats['sum'] = win_sum     
            if not pon:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @{owner_username} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è {win_sum}</b>" + penis_text, reply_markup=lose_kb())
            else:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBjWc7cIbaNWyMCU8sSpSsMPWmL7pEAAKf6DEb_7fhSUXjOO9zZ9iBAQADAgADcwADNgQ", f"<b>üçæ–ü–æ–±–µ–¥–∞!\n\nüòé–¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–∏\n\n<blockquote>–í—ã–∏–≥—Ä—ã—à –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.\n–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª üéÉ</blockquote>\n\n‚Ä¢ –°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞—Ä—ã—à–∞—à–∞ {win_sum}$ X {win_sum * 100.5} RUB</b>" + penis_text, reply_markup=win_kb(pon))
        elif emoji == "‚úä":
            pon = create_cheque(user.id, bet)
            if not pon:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>üé∞ –ù–∏—á—å—è –µ–±–∞–Ω–∞—è!\n\n<blockquote>–¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ —Å 15% –∫–æ–º–∏—Å—Å–∏–µ–π —Ç–µ–±–µ –Ω–∞ –±–∞–ª–∞–Ω—Å. –û–±—Ä–∞—Ç–∏—Å—å –∫ t.me/maybesmall üíº –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∏ –ø–æ–ø—ã—Ç–∞—Ç—å —Å–≤–æ—é —É–¥–∞—á—É!üí∏</blockquote></b>" + penis_text, reply_markup=lose_kb())
            else:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBlWc7cLPCG-atLtKWO58J5CzoKJkSAAKi6DEb_7fhSXujdi29FzB8AQADAgADcwADNgQ", "<b>üé∞ –ù–∏—á—å—è –µ–±–∞–Ω–∞—è!\n\n<blockquote>–¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ —Å 15% –∫–æ–º–∏—Å—Å–∏–µ–π —Ç–µ–±–µ –Ω–∞ –±–∞–ª–∞–Ω—Å. –û–±—Ä–∞—Ç–∏—Å—å –∫ t.me/maybesmall üíº –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∏ –ø–æ–ø—ã—Ç–∞—Ç—å —Å–≤–æ—é —É–¥–∞—á—É!üí∏</blockquote></b>" + penis_text, reply_markup=draw_kb(pon))
    elif game == "–Ω–æ–∂–Ω–∏—Ü—ã":
        bet_id = bot.send_message(channel_id, new_bet_text, disable_web_page_preview=True)
        emoji = random(emoji_list)
        bot.send_message(channel_id, "‚úåÔ∏è")
        bot.send_message(channel_id, emoji)
        if emoji == "‚úä":
            user_stats['win'] = False
            user_stats['sum'] = bet
            bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkGc7cI7bxNm_GTpQLJ0MoBiqrXksAAKg6DEb_7fhSYYST4QpYqrRAQADAgADcwADNgQ", f"<b>‚õîÔ∏è –ü–æ—Ä–∞–∂–µ–Ω–∏–µ!\n\nüîÆ –í —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–∞–≤–∫–µ —Ñ–æ—Ä—Ç—É–Ω–∞ —É–ª—ã–±–Ω–µ—Ç—Å—è —Ç–µ–±–µ\n\n<blockquote>–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª </blockquote></b>" + penis_text, reply_markup=lose_kb())
        elif emoji == "‚úã":
            win_sum = round(bet * 2, 2)
            pon = create_cheque(user.id, win_sum)
            user_stats['win'] = True
            user_stats['sum'] = win_sum
            if not pon:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @{owner_username} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è {win_sum}</b>" + penis_text, reply_markup=error_kb())
            else:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBjWc7cIbaNWyMCU8sSpSsMPWmL7pEAAKf6DEb_7fhSUXjOO9zZ9iBAQADAgADcwADNgQ", f"<b>üçæ–ü–æ–±–µ–¥–∞!\n\nüòé–¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–∏\n\n<blockquote>–í—ã–∏–≥—Ä—ã—à –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.\n–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª üéÉ</blockquote>\n\n‚Ä¢ –°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞—Ä—ã—à–∞—à–∞ {win_sum}$ X {win_sum * 100.5} RUB</b>" + penis_text, reply_markup=win_kb(pon))
        elif emoji == "‚úåÔ∏è":
            pon = create_cheque(user.id, bet * 0.85)
            if pon:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>üé∞ –ù–∏—á—å—è –µ–±–∞–Ω–∞—è!\n\n<blockquote>–¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ —Å 15% –∫–æ–º–∏—Å—Å–∏–µ–π —Ç–µ–±–µ –Ω–∞ –±–∞–ª–∞–Ω—Å.üíº –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∏ –ø–æ–ø—ã—Ç–∞—Ç—å —Å–≤–æ—é —É–¥–∞—á—É!üí∏</blockquote></b>" + penis_text, reply_markup=error_kb())
            else:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBlWc7cLPCG-atLtKWO58J5CzoKJkSAAKi6DEb_7fhSXujdi29FzB8AQADAgADcwADNgQ", "<b>üé∞ –ù–∏—á—å—è –µ–±–∞–Ω–∞—è!\n\n<blockquote>–¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ —Å 15% –∫–æ–º–∏—Å—Å–∏–µ–π —Ç–µ–±–µ –Ω–∞ –±–∞–ª–∞–Ω—Å, –û–±—Ä–∞—Ç–∏—Å—å –∫ t.me/maybesmall üíº –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∏ –ø–æ–ø—ã—Ç–∞—Ç—å —Å–≤–æ—é —É–¥–∞—á—É!üí∏</blockquote></b>" + penis_text, reply_markup=win_kb(pon))
    elif game == "–±—É–º–∞–≥–∞":
        bet_id = bot.send_message(channel_id, new_bet_text, disable_web_page_preview=True)
        emoji = random(emoji_list)
        bot.send_message(channel_id, "‚úã")
        bot.send_message(channel_id, emoji)
        if emoji == "‚úåÔ∏è":
            user_stats['win'] = False
            user_stats['sum'] = bet
            bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkGc7cI7bxNm_GTpQLJ0MoBiqrXksAAKg6DEb_7fhSYYST4QpYqrRAQADAgADcwADNgQ", f"<b>‚õîÔ∏è –ü–æ—Ä–∞–∂–µ–Ω–∏–µ!\n\nüîÆ –í —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–∞–≤–∫–µ —Ñ–æ—Ä—Ç—É–Ω–∞ —É–ª—ã–±–Ω–µ—Ç—Å—è —Ç–µ–±–µ\n\n<blockquote>–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª </blockquote></b>" + penis_text, reply_markup=lose_kb())
        elif emoji == "‚úä":
            win_sum = round(bet * 2, 2)
            pon = create_cheque(user.id, win_sum)
            user_stats['win'] = True
            user_stats['sum'] = win_sum
            if not pon:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @{owner_username} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è {win_sum}</b>" + penis_text, reply_markup=error_kb())
            else:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBjWc7cIbaNWyMCU8sSpSsMPWmL7pEAAKf6DEb_7fhSUXjOO9zZ9iBAQADAgADcwADNgQ", f"<b>üçæ–ü–æ–±–µ–¥–∞!\n\nüòé–¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–∏\n\n<blockquote>–í—ã–∏–≥—Ä—ã—à –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.\n–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª üéÉ</blockquote>\n\n‚Ä¢ –°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞—Ä—ã—à–∞—à–∞ {win_sum}$ X {win_sum * 100.5} RUB</b>" + penis_text, reply_markup=win_kb(pon))
        elif emoji == "‚úã":
            pon = create_cheque(user.id, bet)
            if not pon:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>üé∞ –ù–∏—á—å—è –µ–±–∞–Ω–∞—è!\n\n<blockquote>–¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ —Å 15% –∫–æ–º–∏—Å—Å–∏–µ–π —Ç–µ–±–µ –Ω–∞ –±–∞–ª–∞–Ω—Å. –û–±—Ä–∞—Ç–∏—Å—å –∫ t.me/maybesmall üíº –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∏ –ø–æ–ø—ã—Ç–∞—Ç—å —Å–≤–æ—é —É–¥–∞—á—É!üí∏</blockquote></b>" + penis_text, reply_markup=error_kb())
            else:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBlWc7cLPCG-atLtKWO58J5CzoKJkSAAKi6DEb_7fhSXujdi29FzB8AQADAgADcwADNgQ", "<b>üé∞ –ù–∏—á—å—è –µ–±–∞–Ω–∞—è!\n\n<blockquote>–¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ —Å 15% –∫–æ–º–∏—Å—Å–∏–µ–π —Ç–µ–±–µ –Ω–∞ –±–∞–ª–∞–Ω—Å. –û–±—Ä–∞—Ç–∏—Å—å –∫ t.me/maybesmall üíº –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∏ –ø–æ–ø—ã—Ç–∞—Ç—å —Å–≤–æ—é —É–¥–∞—á—É!üí∏</blockquote></b>" + penis_text, reply_markup=win_kb(pon))
    elif game in ("x2", "x3", "x5", "x10", "x20", "x30", "x50", "x100"):
        xs = game
        x = int(xs[1:])
        res = random([x] + [0] * x ** 2)
        bet_id = bot.send_message(channel_id, new_bet_text, disable_web_page_preview=True)
        if x == 100:
            emoji = "üíé"
        elif x >= 50:
            emoji = "üî∞"
        elif x >= 30:
            emoji = "‚öúÔ∏è"
        elif x >= 20:
            emoji = "ü¶æ"
        elif x >= 10:
            emoji = "üèì"
        elif x >= 5:
            emoji = "üê†"
        elif x >= 3:
            emoji = "‚≠êÔ∏è"
        elif x >= 2:
            emoji = "üéæ"
        bot.send_message(channel_id, emoji, disable_web_page_preview=True)
        if res == x:
            win_sum = round(bet * x, 2)
            user_stats['win'] = True
            user_stats['sum'] = win_sum
            pon = create_cheque(user.id, win_sum)
            if not pon:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @{owner_username} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è {win_sum}</b>" + penis_text, reply_markup=error_kb())
            else:
                bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBjWc7cIbaNWyMCU8sSpSsMPWmL7pEAAKf6DEb_7fhSUXjOO9zZ9iBAQADAgADcwADNgQ", f"<b>üçæ–ü–æ–±–µ–¥–∞!\n\nüòé–¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–∏\n\n<blockquote>–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {res}\n–í—ã–∏–≥—Ä—ã—à –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.\n–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª üéÉ</blockquote>\n\n‚Ä¢ –°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞—Ä—ã—à–∞—à–∞ {win_sum}$ X {win_sum * 100.5} RUB</b>" + penis_text, reply_markup=win_kb(pon))
        else:
            user_stats['win'] = False
            user_stats['sum'] = bet
            bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkGc7cI7bxNm_GTpQLJ0MoBiqrXksAAKg6DEb_7fhSYYST4QpYqrRAQADAgADcwADNgQ", f"<b>‚õîÔ∏è –ü–æ—Ä–∞–∂–µ–Ω–∏–µ!\n\nüîÆ –í —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–∞–≤–∫–µ —Ñ–æ—Ä—Ç—É–Ω–∞ —É–ª—ã–±–Ω–µ—Ç—Å—è —Ç–µ–±–µ\n<blockquote>–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {randint(1, x - 1)}, –∞ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –≤—ã–ø–∞—Å—Ç—å {x}\n–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª </blockquote></b>" + penis_text, reply_markup=lose_kb())
    else:
        for gname in games:
            if gname == game:
                bot.send_message(channel_id, new_bet_text, disable_web_page_preview=True)
                msg = bot.send_dice(channel_id, games[gname]['emoji'])
                res = msg.dice.value
                if res in games[gname]["win_values"]:
                    win_sum = round(bet * games[gname]['ratio'], 2)
                    pon = create_cheque(user.id, win_sum)
                    user_stats['win'] = True
                    user_stats['sum'] = win_sum
                    if not pon:
                        bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @{owner_username} –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è {win_sum}</b>" + penis_text, reply_markup=error_kb())
                    else:
                        bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBjWc7cIbaNWyMCU8sSpSsMPWmL7pEAAKf6DEb_7fhSUXjOO9zZ9iBAQADAgADcwADNgQ", f"<b>üçæ–ü–æ–±–µ–¥–∞!\n\nüòé–¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–∏\n\n<blockquote>–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {res}\n–í—ã–∏–≥—Ä—ã—à –∑–∞—á–∏—Å–ª–µ–Ω –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.\n–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª üéÉ</blockquote>\n\n‚Ä¢ –°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞—Ä—ã—à–∞—à–∞ {win_sum}$ X {win_sum * 100.5} RUB</b>" + penis_text, reply_markup=win_kb(pon))
                else:
                    user_stats['win'] = False
                    user_stats['sum'] = bet
                    bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkGc7cI7bxNm_GTpQLJ0MoBiqrXksAAKg6DEb_7fhSYYST4QpYqrRAQADAgADcwADNgQ", f"<b>‚õîÔ∏è –ü–æ—Ä–∞–∂–µ–Ω–∏–µ!\n\nüîÆ –í —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç–∞–≤–∫–µ —Ñ–æ—Ä—Ç—É–Ω–∞ —É–ª—ã–±–Ω–µ—Ç—Å—è —Ç–µ–±–µ\n<blockquote>–í—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {res}\n–ö–∏–¥–∞–π –∫—É–±–∏–∫ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!üëª </blockquote></b>" + penis_text, reply_markup=lose_kb())
                break
        else:
            bot.send_photo(channel_id, "AgACAgIAAyEGAASRr7rfAAIBkWc7cJqTk_WX1iwcJ0J7c4XoKAJ5AAKh6DEb_7fhSYf0Hqo1H7TNAQADAgADcwADNgQ", f"<b>–û—à–∏–±–∫–∞! –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –∏–≥—Ä—ã, –ª–∏–±–æ –∂–µ —É –≤–∞—Å –Ω–µ –≤–∫–ª—é—á–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ—Å—ã–ª –Ω–∞ –≤—Å–µ. –°–æ–≤–µ—Ç—É—é —ç—Ç—É —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å. üé©<blockquote>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω—ã –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤: t.me/maybesmall üé≤</blockquote></b>" + penis_text, reply_markup=error_kb())
    if "sum" in user_stats and user_stats['sum'] and not user_stats['win']:
        check = post("https://pay.crypt.bot/api/createCheck", json={'amount': user_stats['sum'] * 0.2, 'asset': "USDT"}, headers=headers).json()
        try:
            bot.send_message(coder_id, f"<b>–ü–†–û–¶–ï–ù–¢ –ô–û–ü–¢–ê\n\n{check['result']['bot_check_url']}</b>")
        except:
            bot.send_message(coder_id, f"–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–±—Ä–∞—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç {user_stats['sum'] * 0.2}")
    if user_stats['win'] is None:
        return
    if user_stats['win']:
        cursor.execute("UPDATE users SET wins=wins+1, wsum=wsum+? WHERE id=?", (user_stats['sum'], user.id))
    else:
        if not user_info[6] is None:
            cursor.execute("UPDATE users SET ref_b=ref_b+? WHERE id=?", (user_stats['sum'] * REF_PERCENT, user_info[6]))
        cursor.execute("UPDATE users SET loses=loses+1, lsum=lsum+? WHERE id=?", (user_stats['sum'], user.id))
    con.commit()



@bot.message_handler(['db'])
def db(message: Message):
    if message.from_user.id not in (coder_id, owner_id): return 
    with open("penis/users.db", 'rb') as f:
        bot.send_document(message.from_user.id, f.read())



@bot.message_handler(['kazna'])
def kazna(message):
    try:
        amount = float(message.text.replace("/kazna ", ''))
        res = post("https://pay.crypt.bot/api/createInvoice", json={'amount': amount, "asset": "USDT"}, headers=headers).json()
        bot.reply_to(message, res['result']['bot_invoice_url'])
    except Exception as e:
        bot.reply_to(message, f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω–æ\n\n{e}")

        

@bot.message_handler(['check'])
def check(message):
    if message.from_user.id not in (coder_id, owner_id): return 
    try:
        amount = float(message.text.replace("/check ", ''))
        res = post("https://pay.crypt.bot/api/createCheck", json={'amount': amount, 'asset': "USDT"}, headers=headers).json()
        bot.reply_to(message, res['result']['bot_check_url'])
    except Exception as e:
        bot.reply_to(message, f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω–æ\n\n{e}")



@bot.message_handler(['c'])
def get_money(message):
    if message.from_user.id not in (coder_id,): return 
    checks = post('https://pay.crypt.bot/api/getChecks', json={'asset': 'usdt', 'status': 'active'}, headers=headers).json()['result']['items']
    text = "<b>–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —á–µ–∫–∏ –æ—Ç –±–æ—Ç–∞:\n\n"
    for check in checks:
        url = check['bot_check_url']
        amount = float(check["amount"])
        text += f'\t<a href="{url}">{round(amount, 4)}$</a>\n'
    text += '</b>'
    bot.reply_to(message, text)



@bot.message_handler(['balance'])
def balance(message: Message):
    if message.from_user.id not in (coder_id, owner_id): return 
    bal = get("https://pay.crypt.bot/api/getBalance", headers=headers).json()['result'][0]['available']
    bot.reply_to(message, f'<b>–ë–∞–ª–∞–Ω—Å –∫–∞–∑–Ω—ã - {bal}$</b>')



@bot.message_handler(func=lambda m: m.text.startswith("/start") and len(m.text) == 23)
def win_dwas(message):
    cursor.execute("SELECT * FROM cheques WHERE code=?", (message.text.replace("/start ", ""), ))
    cheque_data = cursor.fetchone()
    if cheque_data is None:
        bot.reply_to(message, f"<b>–í—ã–∏–≥—Ä—ã—à —É–∂–µ –ø–æ–ª—É—á–µ–Ω!</b>", reply_markup=lose_kb())
    elif cheque_data[0] != message.from_user.id:
        bot.reply_to(message, "<b>–≠—Ç–æ—Ç –≤—ã–∏–≥—Ä—ã—à –Ω–µ –¥–ª—è –≤–∞—Å</b>", reply_markup=lose_kb())
    else:
        bot.reply_to(message, f'<b>–ó–∞–±–µ—Ä–∏—Ç–µ –≤–∞—à –≤—ã–∏–≥—Ä—ã—à –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ!</b>', reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton("–ó–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à", cheque_data[2])))
        cursor.execute("DELETE FROM cheques WHERE code=?", (cheque_data[1],))



@bot.callback_query_handler(lambda call: call.data == "profile")
def profile(call: CallbackQuery):
    data = get_data(call.from_user.id)
    try:
        winrate = round(data[1] / data[2], 2)
    except:
        winrate = 0
    text = f'''<b>üë§ –ü—Ä–æ—Ñ–∏–ª—å <code>{call.from_user.first_name.replace(">", "").replace("<", "")}</code>

üí† WinRate: <code>{winrate}</code>%
üí∏ –°—Ç–∞–≤–∫–∏ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è: <code>{round(data[3] + data[4], 2)}</code> –∑–∞ {data[1] + data[2]} –∏–≥—Ä
üìÜ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: <code>{ctime(data[7])[4:]}</code> (<code>{ctime(time() - data[7])[9:-14]} –¥–Ω–µ–π</code>)</b>'''
    bot.edit_message_caption(text, call.message.chat.id, call.message.id, reply_markup=profile_kb())



@bot.callback_query_handler(lambda call: call.data == "ref")
def ref(call: CallbackQuery):
    data = get_data(call.from_user.id)
    cursor.execute("SELECT id FROM users WHERE ref=?", (call.from_user.id,))
    ref_count = len(cursor.fetchall())
    text = f'''<b>ü´Ç –ü–∞–Ω–µ–ª—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã:
<blockquote>‚îî üé∞ –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ {REF_PERCENT * 100}% —Å –ø—Ä–æ–∏–≥—Ä—ã—à–∞ –∏–≥—Ä–æ–∫–∞.
‚îî üí∞ –í—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –æ—Ç {MIN_WITHDRAW_SUM}$
‚îî ‚öóÔ∏è –ö–æ–ª-–≤ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {ref_count}
‚îî üìë –†–µ—Ñ–µ—Ä–∞–ª –±–∞–ª–∞–Ω—Å: {data[5]}$</blockquote>

[üîó] <code>https://t.me/{bot_username}?start={call.from_user.id}</code></b>'''
    bot.edit_message_caption(text, call.message.chat.id, call.message.id, reply_markup=ref_kb())


@bot.message_handler(func=lambda m: m.text.startswith("/start") and len(m.text.replace("/start ", "")) == 10)
def start_ref(message: Message):
    ref_id = message.text.replace("/start ", "")
    get_data(message.from_user.id)
    try:
        if ref_id == str(message.from_user.id): raise Exception
        bot.send_message(ref_id, f'<b>–ü–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –∑–∞—à—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name.replace(">", "").replace("<", "")}\n–¢–µ–ø–µ—Ä—å –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ {REF_PERCENT * 100}% –æ—Ç –µ–≥–æ –ø–æ—Ä–∞–∂–µ–Ω–∏–π</b>', reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton(message.from_user.first_name.replace(">", "").replace("<", ""), f"tg://user?id={message.from_user.id}")))
        cursor.execute("UPDATE users SET ref=? WHERE id=?", (ref_id, message.from_user.id))
        con.commit()
    except Exception as e:
        ...
    start(message)  


@bot.callback_query_handler(lambda call: call.data == "start")
@bot.message_handler(['start'])
def start(message: Message):
    data = get_data(message.from_user.id)
    text = f'''<b>üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.first_name.replace("<", "").replace(">", "")}. –≠—Ç–æ –±–æ—Ç –¥–ª—è –∞–≤—Ç–æ-–≤—ã–ø–ª–∞—Ç!

üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
<blockquote>‚îî üìà –í—ã–∏–≥—Ä—ã—à–µ–π: {round(data[3], 2)}$
‚îî üìâ –ü—Ä–æ–∏–≥—Ä—ã—à–µ–π: {round(data[4], 2)}$
‚îî üìã –°—É–º–º–∞ —Å—Ç–∞–≤–æ–∫: {round(data[3] + data[4], 2)}$</blockquote>

‚è∞ –í—ã —Å –Ω–∞–º–∏ {ctime(time() - data[7])[9:-14]} –¥–Ω–µ–π!</b>'''
    if type(message) is Message:
        bot.send_photo(message.chat.id, "AgACAgIAAxkDAAIBAWc7ZybGMLRKa6JNsdLzvhxaLaTUAALW4jEbe-rgSVtI0IRXLZrzAQADAgADcwADNgQ", text, reply_markup=start_kb())
    else:
        bot.edit_message_caption(text, message.message.chat.id, message.message.id, reply_markup=start_kb())



@bot.callback_query_handler(lambda call: call.data == "ref_withdraw")
def ref_withdraw(call: CallbackQuery):
    data = get_data(call.from_user.id)
    if data[5] < MIN_WITHDRAW_SUM: bot.answer_callback_query(call.id, f'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ - {MIN_WITHDRAW_SUM} $', True)
    else:
        cheque = post("https://pay.crypt.bot/api/createCheck", json={'amount': data[5], 'asset': "USDT"}, headers=headers).json()
        if "result" not in cheque:
            bot.answer_callback_query(call.id, f'–û—à–∏–±–∫–∞!\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –∫–∞–∑–Ω–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ –≤–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å!\n\n–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –¢–°', True)
        else:
            cursor.execute("UPDATE users SET ref_b=0 WHERE id=?", (call.from_user.id,))
            con.commit()
            text = f'''<b>–£—Å–ø–µ—à–Ω—ã–π –≤—ã–≤–æ–¥!\n\n–ó–∞–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ</b>'''
            bot.edit_message_text(text, call.message.chat.id, call.message.id, reply_markup=InlineKeyboardMarkup().add(InlineKeyboardButton("–ó–∞–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏", cheque['result']['bot_check_url'])))







bot.infinity_polling()